syntax = "proto3";

package comment;

option go_package = "star/proto/comment/commentPb;commentPb";

// 定义评论消息
message Comment {
  int64 commentId = 1;   // 评论id
  int64 postId = 2;      // 帖子id
  int64 userId = 3;      // 用户id
  string content = 4;     // 评论内容
  int64 star = 5;         // 点赞数
  int64 reply = 6;        // 回复数
  int64 beCommentId = 7;// 关联评论id
  string createdAt = 8;  // 创建时间
  repeated Comment childComments = 9; // 子评论列表
}

// 定义发布评论的请求
message PostCommentRequest {
  int64 postId = 1;        // 帖子id
  int64 userId = 2;        // 用户id
  string content = 3;       // 评论内容
  int64 beCommentId = 4;  // 关联评论id
}

// 定义发布评论的响应
message PostCommentResponse {
  string content = 1;     //评论内容
}

// 定义删除评论的请求
message DeleteCommentRequest {
  int64 commentId = 1;    // 评论id
}

// 定义删除评论的响应
message DeleteCommentResponse {
}

// 定义获取评论列表的请求
message GetCommentsRequest {
  int64 postId = 1;      // 帖子id
  int64 communityId=2;
}

// 定义获取评论列表的响应
message GetCommentsResponse {
  repeated Comment comments = 1;  // 评论切片
}



message CountCommentRequest{
  int64  ActorId=1;
  int64  PostId=2;
}

message CountCommentResponse{
  int64  Count=1;
}

message QueryCommentExistRequest{
  int64  CommentId=1;
}

message QueryCommentExistResponse{
  bool  Result=1;
}
// 定义评论服务
service CommentService {
  // 发布评论服务
  rpc PostComment (PostCommentRequest) returns (PostCommentResponse);
  // 删除评论服务
  rpc DeleteComment (DeleteCommentRequest) returns (DeleteCommentResponse);
  // 获取评论服务
  rpc GetComments (GetCommentsRequest) returns (GetCommentsResponse);

  rpc CountComment(CountCommentRequest)returns(CountCommentResponse);

  rpc QueryCommentExist(QueryCommentExistRequest)returns(QueryCommentExistResponse);
}
