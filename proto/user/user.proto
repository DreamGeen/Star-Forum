syntax ="proto3";

package userPb;

option go_package="star/proto/user/userPb;userPb";


service userService{
   rpc LoginPassword(LSRequest)returns (LoginResponse){};
   rpc LoginCaptcha(LSRequest)returns(LoginResponse){};
   rpc Signup(LSRequest)returns(EmptyLSResponse){};
   rpc GetUserInfo(GetUserInfoRequest)returns(GetUserInfoResponse);
   rpc  GetUserExistInformation(GetUserExistInformationRequest)returns(GetUserExistInformationResponse);
}

//LSRequest 登录或注册请求,其中User可以表示用户名或邮箱
message LSRequest{
  string user=1;
  string password=2;
  string phone=3;
  string captcha=4;
  string  ip=5;
}

message LoginResponse{
  Token  token=1;
  message Token{
    string accessToken = 1;
    string refreshToken = 2;
  }
  User  UserInfo=3;
}
message EmptyLSResponse{

}

message GetUserInfoRequest{
   int64   actorId=1;
   int64   userId=2;
}

message  GetUserInfoResponse{
    User  user=1;
}

message User{
    int64  userId=1;
   optional int64   totalLiked=2;
   optional int64  likeCount =3  ;
   optional int64  collectCount=4;
   optional int64   postCount=5;
   optional  int64   followCount=6;
   optional  int64   fansCount=7;
    string  username=8;
   optional string   email=9;
   optional string   avatar=10;
   optional string   birthday=11;
   optional string   introduction=12;
   optional string   phone=13;
   optional  string  school=14;
   optional  string   lastLoginTime=15;
   optional  string   lastLoginIp=16;
   optional  string   noticeInfo=17;
   optional  string   joinTime=18;
   optional uint32    totalCoinCount=19;
   optional  uint32   currentCoinCount=20;
   optional  uint32    theme=21;
   optional  uint32   sex=22;
   optional   uint32  status=23;
    bool   isFollow=24;

}
message GetUserExistInformationRequest{
  int64  userId=1;
}
message GetUserExistInformationResponse{
  bool  existed=1;
}
